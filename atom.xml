<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[HTML5 Dev Gal]]></title>
  <link href="http://html5devgal.com//atom.xml" rel="self"/>
  <link href="http://html5devgal.com//"/>
  <updated>2013-06-05T15:41:39-05:00</updated>
  <id>http://html5devgal.com//</id>
  <author>
    <name><![CDATA[Julia Jacobs]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Vertically and Horizontally Center With Twitter Bootstrap (Responsive)]]></title>
    <link href="http://html5devgal.com//blog/2013/05/29/vertically-and-horizontally-center-with-twitter-bootstrap-responsive/"/>
    <updated>2013-05-29T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/29/vertically-and-horizontally-center-with-twitter-bootstrap-responsive</id>
    <content type="html"><![CDATA[I wanted a cross browser / cross device way to vertically and horizontally center my responsive bootstrap elements.

I found a great way to do it.  Just add this to your site stylesheet to override / extend bootstrap.

<iframe style="width: 100%; height: 300px" src="http://jsfiddle.net/kSgE6/embedded/css,html/light/"></iframe>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Dynamic Namespace Objects Based On Directory Structure and File Names]]></title>
    <link href="http://html5devgal.com//blog/2013/05/24/dynamic-namespace-objects-based-on-directory-structure-and-file-names/"/>
    <updated>2013-05-24T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/24/dynamic-namespace-objects-based-on-directory-structure-and-file-names</id>
    <content type="html"><![CDATA[In a <a href="http://html5devgal.wordpress.com/2013/05/16/create-dynamic-namespace-autoloader-with-node-js-express-walk-and-titlecaps/" title="Create Dynamic Namespace Autoloader With Node.js, Express, and Walk" target="_blank">previous article</a> I showed how to create a dynamic namespace autoloader with node.js, express, and walk.  Please check out this article for information on how to set this up, what node modules to install and where to put this code.

In the http.createServer() function, add this code (or something like it):

<figure class='code'><figcaption><span> (dynamicNamespaceObjectsFilenames.js)</span> <a href='http://html5devgal.com//downloads/code/dynamicNamespaceObjectsFilenames.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">http</span><span class="p">.</span><span class="nx">createServer</span><span class="p">(</span><span class="nx">app</span><span class="p">).</span><span class="nx">listen</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;port&#39;</span><span class="p">),</span> <span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s2">&quot;Express server listening on port &quot;</span> <span class="o">+</span> <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;port&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot; in &quot;</span> <span class="o">+</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">NODE_ENV</span> <span class="o">+</span> <span class="s2">&quot; mode.&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">emitter</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">str</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">iter</span> <span class="o">=</span> <span class="p">[],</span>
</span><span class='line'>        <span class="nx">startPath</span> <span class="o">=</span> <span class="s2">&quot;public/javascripts/poc&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">appName</span> <span class="o">=</span> <span class="s2">&quot;poc&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">filePath</span> <span class="o">=</span> <span class="s2">&quot;public/javascripts/poc/namespace.js&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">log</span> <span class="o">=</span> <span class="nx">fs</span><span class="p">.</span><span class="nx">createWriteStream</span><span class="p">(</span><span class="nx">filePath</span><span class="p">,</span> <span class="p">{</span><span class="s1">&#39;flags&#39;</span><span class="o">:</span> <span class="s1">&#39;w&#39;</span><span class="p">});</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">spacedStartPath</span> <span class="o">=</span> <span class="nx">startPath</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\//g</span><span class="p">,</span> <span class="s2">&quot; &quot;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">str</span> <span class="o">=</span> <span class="s2">&quot;window.&quot;</span> <span class="o">+</span> <span class="nx">appName</span> <span class="o">+</span> <span class="s2">&quot; = {} || &quot;</span> <span class="o">+</span> <span class="nx">appName</span> <span class="o">+</span> <span class="s2">&quot;;\r\n&quot;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">emitter</span> <span class="o">=</span> <span class="nx">walk</span><span class="p">.</span><span class="nx">walk</span><span class="p">(</span><span class="nx">startPath</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">function</span> <span class="nx">upperCaseMe</span> <span class="p">(</span><span class="nx">txt</span><span class="p">){</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span> <span class="o">+</span> <span class="nx">txt</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">toLowerCase</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">emitter</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;file&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">path</span><span class="p">,</span> <span class="nx">stat</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nx">stat</span><span class="p">.</span><span class="nx">name</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">!==</span> <span class="s1">&#39;.&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">filepath</span> <span class="o">=</span>  <span class="p">[</span><span class="nx">path</span><span class="p">,</span> <span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="nx">stat</span><span class="p">.</span><span class="nx">name</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">noSlash</span> <span class="o">=</span>  <span class="nx">filepath</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\//g</span><span class="p">,</span> <span class="s2">&quot; &quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">stripStartPath</span> <span class="o">=</span>  <span class="nx">noSlash</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">spacedStartPath</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">stripJs</span> <span class="o">=</span>  <span class="nx">stripStartPath</span><span class="p">.</span><span class="nx">replace</span> <span class="p">(</span><span class="s1">&#39;.js&#39;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">uppercase</span> <span class="o">=</span> <span class="nx">stripJs</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\w\S*/g</span><span class="p">,</span> <span class="nx">upperCaseMe</span><span class="p">);</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">uppercase</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">uppercase</span> <span class="o">=</span> <span class="nx">uppercase</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/ /g</span><span class="p">,</span><span class="s2">&quot;.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">};</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">pathArr</span> <span class="o">=</span> <span class="nx">uppercase</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">);</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">joined</span> <span class="o">=</span> <span class="p">[];</span>
</span><span class='line'>            <span class="kd">var</span> <span class="nx">joinedStr</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class='line'>            <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span> <span class="nx">pathArr</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">joined</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">pathArr</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>                <span class="nx">joinedStr</span> <span class="o">+=</span> <span class="nx">appName</span> <span class="o">+</span> <span class="s1">&#39;.&#39;</span> <span class="o">+</span> <span class="nx">joined</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot; = {};\r\n&quot;</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>            <span class="nx">iter</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">joinedStr</span><span class="p">);</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">next</span><span class="p">();</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">emitter</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s1">&#39;end&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">uniquePaths</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="p">,</span> <span class="nx">uniqueEntries</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>        <span class="p">,</span> <span class="nx">end</span> <span class="o">=</span> <span class="s2">&quot;\r\n&quot;</span>
</span><span class='line'>        <span class="p">,</span> <span class="nx">finalJoinedString</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span> <span class="nx">iter</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">uniquePaths</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">iter</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">uniquePaths</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">iter</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>                <span class="nx">str</span> <span class="o">+=</span> <span class="nx">iter</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">strArray</span> <span class="o">=</span> <span class="nx">str</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="nx">end</span><span class="p">);</span>
</span><span class='line'>        <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&amp;</span><span class="nx">lt</span><span class="p">;</span> <span class="nx">strArray</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nx">uniqueEntries</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">strArray</span><span class="p">[</span><span class="nx">i</span><span class="p">])</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">uniqueEntries</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">strArray</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>                <span class="nx">finalJoinedString</span> <span class="o">+=</span> <span class="nx">strArray</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+</span> <span class="nx">end</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="nx">log</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">finalJoinedString</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>

Please note this is kind of a mess of arrays so I&#8217;d be very grateful for any suggestions on how to make this cleaner.

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Two New jQuery Plugins and One New Node Module]]></title>
    <link href="http://html5devgal.com//blog/2013/05/16/my-two-new-jquery-plugins-and-one-new-node-module/"/>
    <updated>2013-05-16T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/16/my-two-new-jquery-plugins-and-one-new-node-module</id>
    <content type="html"><![CDATA[On my quest to plugify and properly modulerize my code I created two new jQuery plugins and one new node nodule.
<h1>jQuery plugins</h1>
<a title="jQuery Prettify" href="https://github.com/jewelsjacobs/jquery.prettify" target="_blank">jQuery Prettify</a>
jQuery plugin to print an associative array / object in the browser

UPDATE: The a jQuery UI function <a href="http://api.jqueryui.com/position/" target="_blank">position()</a> centers fine so don&#8217;t even bother with the following plugin.

My Simple Center Plugin
<a title="jQuery Simple Center Plugin" href="https://github.com/jewelsjacobs/jquery.simpleCenter" target="_blank">jQuery SimpleCenter</a>
Simple jQuery plugin to vertically and horizontally center an element within another element.
<h1>Node.js modules</h1>
<a title="titlecaps Node.js Module" href="https://npmjs.org/package/titlecaps" target="_blank">titlecaps</a>
Node module to capitalize first letter in each word

Please bear in mind that they have not been node unit or qunit tested yet, just jhinted as I&#8217;m on a tight schedule at work.  I&#8217;ll make it happen very soon!

UPDATE:  I was &#8216;schooled&#8217; by the more experienced dev <a href="http://uk.linkedin.com/in/nelsonic/" title="Nelson Kenneth Correia" target="_blank">Nelson Kenneth Correia</a> who mentioned these plugins / mod were overkill.  I thought it prudent to mention his response:

<blockquote>@Juila, just had a look at your SimpleCenter Plugin. 

Firstly I want to applaud your effort to create a JQuery plugin, 
and then advise everyone *new* to javascript to *not* do this! 
Positioning elements on the page/canvas is done with CSS. 

Here is your JS fiddle without *any* JavaScript: http://jsfiddle.net/jewelsjacobs/Nuyc9/ 

Centering an element in a div is *easy* in CSS and should be done in a stylesheet unless there&#8217;s a very good reason to do it *dynamically* in JS. 

Secondly I don&#8217;t see how your Prettify is better than the original: https://code.google.com/p/google-code-prettify/wiki/GettingStarted 

And finally Capitalizing the first letter of each word in a string has been done many times and does not require an entire Node Module&#8230; 

It can be done with a *single* line of JavaScript: 
http://jsfiddle.net/jewelsjacobs/Nuyc9/ 

Once again, I congratulate your efforts! 
Especially the fact that you&#8217;ve written tests and used Travis.com to confirm the build status of your module! :-) 

But please pick which Modules and Plugins you share here more carefully. 
As developers we need to set a good example to others. 
Writing an entire *module* just to capitalize first letters in a string is like using a bomb to build a sand castle! &#8230; #overkill! 

And building JQuery plugins when simple CSS will achieve your goal is a good *thought* exercise, but should *never* be used in the real world because its a code maintenance nightmare! 

The last thing I want is my junior developers copy-pasting this kind of code! 

I look forward to reading your *next* efforts. :-)</blockquote>

His Caps code worked perfectly but his CSS code has to be changed depending on the sizes of the elements which is not exactly what I wanted to do.  The Prettify code he references doesn&#8217;t really do what I want either.

I made the plugin because I wanted a way to spit out all of the necessary code dynamically without including it in the html file. Basically , just create a div, give the function and object and viola. From what I can tell of the plugin he refers to just formats text in a pre tag. You still have to attach the text to the pre tag or generate the pre tag.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Create Dynamic Namespace Autoloader With Node.js, Express, and Walk]]></title>
    <link href="http://html5devgal.com//blog/2013/05/16/create-dynamic-namespace-autoloader-with-node-js-express-walk-and-titlecaps/"/>
    <updated>2013-05-16T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/16/create-dynamic-namespace-autoloader-with-node-js-express-walk-and-titlecaps</id>
    <content type="html"><![CDATA[UPDATE: This only makes global namespace objects based on directory structure.  Read my updated article on including file names as well.

I was tired of manually creating namespace objects for my javascript files so I decided to dynamically generate a namespace.js file based on the directory structure of my app.

Here&#8217;s how:
<h2>Requirements</h2>
<ul>
	<li><a title="node.js" href="http://nodejs.org/" target="_blank">node.js</a></li>
</ul>
<h3>Node Modules</h3>
<ul>
	<li><a title="express" href="http://expressjs.com/" target="_blank">express</a></li>
	<li><a title="walk" href="https://github.com/coolaj86/node-walk" target="_blank">walk</a></li>
</ul>
<h2>Instructions</h2>
Download and install a <a title="Download Node.js installer" href="http://nodejs.org/" target="_blank">node.js binary</a>.

Create a project folder and navigate to it:

[code]mkdir app
cd app
[/code]

Install the npm modules. The -S flag will save the dependency info to your package.json file:

[code]npm install express walk -S[/code]

Set up express in your app. If you don&#8217;t know how to do this, check out the <a title="express guide" href="http://expressjs.com/guide.html" target="_blank">express guide</a> or checkout the <span style="text-decoration:underline;"><b>Using express(1) to generate an app</b></span> section in the guide to auto generate a node.js / express app.

In your server.js or app.js file (which ever one you&#8217;ve created for express) do the following:

Make sure you are requiring the nescessary modules. You probably need more but these are just for the code in this example:

[code language=&#8221;javascript&#8221;]
var express = require(&#8216;express&#8217;),
    http = require(&#8216;http&#8217;),
    fs = require(&#8216;fs&#8217;),
    walk = require(&#8216;walk&#8217;);
[/code]

To run the http server in express you probably have something like this in the file:

[code language=&#8221;javascript&#8221;]
http.createServer(app).listen(app.get(&#8216;port&#8217;), function(){
    console.log(&quot;Express server listening on port &quot; + app.get(&#8216;port&#8217;) + &quot; in &quot; + process.env.NODE_ENV + &quot; mode.&quot;);
});
[/code]

To auto generate the namespace file when the http server starts, modify the http.createServer code block to look like this. Make sure to replace following variables:
<ul>
	<li><strong>startPath</strong> - path where your app directory resides in relation to the server.js / app.js file.</li>
	<li><strong>appName</strong> - global namespace.</li>
	<li><strong>filePath</strong> - path of the file you want to write the namespace code to.</li>
</ul>
[code language=&#8221;javascript&#8221;]
http.createServer(app).listen(app.get(&#8216;port&#8217;), function(){
    console.log(&quot;Express server listening on port &quot; + app.get(&#8216;port&#8217;) + &quot; in &quot; + process.env.NODE_ENV + &quot; mode.&quot;);

    var emitter,
        str,
        startPath = &quot;public/javascripts/poc&quot;,
        appName = &quot;poc&quot;,
        filePath = &quot;public/javascripts/poc/namespace.js&quot;;

    var log = fs.createWriteStream(filePath, {&#8216;flags&#8217;: &#8216;w&#8217;});
    var spacedStartPath = startPath.replace(/\//g, &quot; &quot;);

    function upperCaseMe (txt){
        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
    }

    str = &quot;window.&quot; + appName + &quot; = {} || &quot; + appName + &quot;;\r\n&quot;;
    emitter = walk.walk(startPath);

    emitter.on(&#8216;directory&#8217;, function (path, stat, next) {
        var dirpath =  [path, &#8216;/&#8217;, stat.name].join(&#8221;);

        var noSlash =  dirpath.replace(/\//g, &quot; &quot;);
        var strip =  noSlash.replace(spacedStartPath,&quot;&quot;);
        var uppercase = strip.replace(/\w\S*/g, upperCaseMe);
        if (uppercase.indexOf(&quot; &quot;) != -1) {
            uppercase = uppercase.replace(/ /g,&quot;.&quot;);
        };
        var end = &quot; = {};\r\n&quot;
        str += appName + uppercase + end;

        next();
    });

    emitter.on(&#8216;end&#8217;, function () {
        log.write(str);
    });

});
[/code]

With this example and this app directory structure

[code language=&#8221;text&#8221; gutter=&#8221;false&#8221;]
poc
&#8211;data
&#8212;-api
&#8212;-layout
&#8212;-providers
&#8211;grid
&#8211;models
&#8212;-view
[/code]
the autogenerated namespace file looks like this:
[code language=&#8221;javascript&#8221;]
window.poc = {} || poc;
poc.Data = {};
poc.Grid = {};
poc.Models = {};
poc.Models.View = {};
poc.Data.Api = {};
poc.Data.Layout = {};
poc.Data.Providers = {};
[/code]

This way I can take the following file:

[code language=&#8221;text&#8221; gutter=&#8221;false&#8221;]
poc/data/providers/names.js
[/code]

and use the following namespace / naming convention code to define a global method / object:
[code language=&#8221;javascript&#8221;]
poc.Data.Providers.Names.globalvar = &quot;globalvarval&quot;;
poc.Data.Providers.Names.globalmethod = function(){
// awesome code here
};
[/code]

I got a twitter response from a one of the great JavaScript masters <a href="http://www.2ality.com/" title="Dr. Axel Rauschmayer's Blog" target="_blank">Dr. Axel Rauschmayer</a> when asking if his <a href="http://www.2ality.com/2011/11/lobrow.html" title="lobrow library" target="_blank">lobrow library</a> could be used to do this only using browser modules.  I wasn&#8217;t able to do it and wound up with this solution but he gives some tips:

<blockquote class="twitter-tweet"><p>@<a href="https://twitter.com/jewelsjacobs">jewelsjacobs</a> Have you tried browserify? <a href="http://t.co/nQSytJGunc" title="http://browserify.org/">browserify.org</a>Best you can do with files in browsers: <a href="http://t.co/gm7Z7kwB0J" title="http://www.html5rocks.com/en/tutorials/file/filesystem/">html5rocks.com/en/tutorials/f…</a></p>&mdash; Axel Rauschmayer (@rauschma) <a href="https://twitter.com/rauschma/status/335016533325647872">May 16, 2013</a></blockquote>


I hope someone finds this helpful!
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cool Firefox and Chrome Console Functions]]></title>
    <link href="http://html5devgal.com//blog/2013/05/15/cool-firefox-and-chrome-console-functions/"/>
    <updated>2013-05-15T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/15/cool-firefox-and-chrome-console-functions</id>
    <content type="html"><![CDATA[When working with JavaScript, CSS and / or HTML we devs love browser development tools. Its a little known fact, however that the console in these tools have thier own handy functions.

For example, if you want to copy an array or an object in the console, you can type

[code type=&#8221;javascript&#8221;]copy(someArrayVariableName)[/code]

.  please note in this example I copied the contents of the clipboard to the console so you can see it.:

[caption id=&#8221;attachment_64&#8221; align=&#8221;alignnone&#8221; width=&#8221;700&#8221;]<a href="http://html5devgal.files.wordpress.com/2013/05/copyfromconsole.png"><img class=" wp-image-64 " alt="Copying array in console to clipboard in Chrome" src="http://html5devgal.files.wordpress.com/2013/05/copyfromconsole.png?w=700" width="700" height="141" /></a> Copying array in console to clipboard in Chrome[/caption]

There&#8217;s a whole bunch of other cool console functions as well. Check them out!

<a title="Chrome Command Line API" href="https://developers.google.com/chrome-developer-tools/docs/commandline-api" target="_blank">Chrome Command Line API</a>

<a title="Firebug Command Line API" href="http://getfirebug.com/wiki/index.php/Command_Line_API" target="_blank">Firebug Command Line API</a>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ditching WordPress For Github Pages With Octopress]]></title>
    <link href="http://html5devgal.com//blog/2013/05/13/ditching-wordpress-for-github-pages-with-octopress/"/>
    <updated>2013-05-13T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/13/ditching-wordpress-for-github-pages-with-octopress</id>
    <content type="html"><![CDATA[After not being able to do things like embed jsfiddle code in this blog, I decided to ditch WordPress and go with <a title="Deploying Octopress to Github Pages" href="http://octopress.org/docs/deploying/github/" target="_blank">Github Pages + Octopress</a>.

If you want some details about the advantages of switching, <a title="Switching to Octopress" href="http://aijazansari.com/2011/12/12/switching-to-octopress/" target="_blank">this blog article</a> explains in nicely.

Anywho my new blog will be <a title="My brand spankin' new Octopress Github Pages blog" href="http://html5devgal.com/" target="_blank">here</a>.

It&#8217;s very empty now as I have to focus on my day job and not all of the shiny new toys out there but I hope to get it filled up soon.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Absolutely awesome article on plugin development, testing, and CI with grunt]]></title>
    <link href="http://html5devgal.com//blog/2013/05/12/absolutely-awesome-article-on-plugin-development-testing-and-ci-with-grunt/"/>
    <updated>2013-05-12T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/12/absolutely-awesome-article-on-plugin-development-testing-and-ci-with-grunt</id>
    <content type="html"><![CDATA[I had one of those &#8216;Boy this would make an awesome jquery plugin&#8217; moments so I decided to roll my own. 

I also decided I needed to do it right so I could contribute it to the open source community without shame. 

I did some some google-ing to find some best practices info and ran into this awesome <a href="http://markdalgleish.com/2013/01/testing-jquery-plugins-cross-version-with-grunt/">article</a>. 

I thought I would pass it along.

Along with some other great <a href="http://learn.jquery.com/plugins/?rdfrom=http%3A%2F%2Fdocs.jquery.com%2Fmw%2Findex.php%3Ftitle%3DPlugins%2FAuthoring%26redirect%3Dno">articles</a> about jquery plugin best practices I was able to dive right in. 

<a href="https://github.com/jewelsjacobs/jquery.simpleCenter">Here&#8217;s</a> what I&#8217;ve got so far (a work in progress).

If your new to testing, CI, plugin development or just want to see a good way to design good open source JavaScript apps, I highly recommend reading this stuff.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Vanilla JavaScript Menu from JSON]]></title>
    <link href="http://html5devgal.com//blog/2013/05/09/vanilla-javascript-menu-from-json/"/>
    <updated>2013-05-09T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/09/vanilla-javascript-menu-from-json</id>
    <content type="html"><![CDATA[<em>Ooops, wordpress.com hosted blogs do not allow iframe embeds :(
Sorry to anyone who tried to see this earlier &#8230;</em>

I was asked to create a side nav with submenus using just plain vanilla JavaScript.  Here it is:
Here&#8217;s the jsfiddle. <a href="http://jsfiddle.net/jewelsjacobs/8aaqW/" title="Vanilla JavaScript Menu from JSON jsfiddle" target="_blank">link</a>

Update - fixed a bug on this that would cause the menu to intermittently disappear when clicked.
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Trick to get three.js camera z plane value in browser development tools console]]></title>
    <link href="http://html5devgal.com//blog/2013/05/01/trick-to-get-three-js-camera-z-plane-value-in-browser-development-tools-console/"/>
    <updated>2013-05-01T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/01/trick-to-get-three-js-camera-z-plane-value-in-browser-development-tools-console</id>
    <content type="html"><![CDATA[Here&#8217;s a tip on how to get the z plane camera position in chrome&#8217;s console. In this example my render DOM element container has an id of &#8216;video_container&#8217;. Just replace it with yours. Also I&#8217;m using jquery so you will need to have that included in your app.

I attached this to a global variable (poc is the global namespace of my app) so I can just enter &#8220;poc.DebugData()&#8221; in the console.

[code language=&#8221;javascript&#8221;]
poc.DebugData = function () {
     if ($(&quot;#video_container&quot;).length &gt; 0) {
         return {
             &quot;window height&quot; : window.innerHeight,
             &quot;window width&quot; : window.innerWidth,
             &quot;camera z pos&quot; : Math.abs(
                 parseInt(
                     $(&quot;#video_container&quot;)
                         .children(&quot;div&quot;)
                         .eq(0)
                         .children()[0]
                         .attributes.style.nodeValue
                         .split(&#8216;: &#8216;)[4]
                         .split(&#8216;) &#8216;)[1]
                         .split(&#8216;, &#8216;)[14]
                 )
             )
         };
     }
 };
[/code]

There&#8217;s probably a cleaner way to do this but this is what I&#8217;ve got!
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScript For Samsung SmartTV Browser Detection]]></title>
    <link href="http://html5devgal.com//blog/2013/05/01/javascript-for-samsung-smarttv-browser-detection/"/>
    <updated>2013-05-01T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/01/javascript-for-samsung-smarttv-browser-detection</id>
    <content type="html"><![CDATA[Here&#8217;s the code to determine if the current browser is a SmartTV - requires <a title="Modernizr" href="http://modernizr.com/" target="_blank">Modernizr</a>:

[code language=&#8221;javascript&#8221;]
function isSmartTV() {
    return Modernizr.websockets === false;
}
[/code]

This works because the Samsung SmartTV does not support Web Sockets which I find out by running the <a title="Modernizr Test Suite" href="http://modernizr.github.io/Modernizr/test/index.html" target="_blank">Modernizr Test Suite</a> on the SmartTV.

UPDATE: Actually I wound up changing this to use User-Agent sniffing based on a great <a href="http://lnkd.in/Wtidi7" title="LinkedIn Discussion" target="_blank">discussion</a> I had with <a href="www.linkedin.com/in/dmikey/" title="Derek Anderson" target="_blank">Derek Anderson</a>

[code language=&#8221;javascript&#8221;]
function () {
    return navigator.userAgent.search(/TV/i) &gt;= 0;
}
[/code]
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Career Tips for JavaScript Developers]]></title>
    <link href="http://html5devgal.com//blog/2013/05/01/career-tips-for-javascript-developers/"/>
    <updated>2013-05-01T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/05/01/career-tips-for-javascript-developers</id>
    <content type="html"><![CDATA[[caption id=&#8221;&#8221; align=&#8221;alignleft&#8221; width=&#8221;149&#8221;]<img class=" " alt="" src="http://s3.amazonaws.com/rapgenius/1291131680_two-thumbs-up.jpg" width="149" height="192" /> I am very much success in my jobs![/caption]

Here&#8217;s some tips that will benefit ANY JavaScript developer on their path to success:

Tip #1 : In a JavaScript interview don&#8217;t say &#8216;Vanilla JavaScript? What framework is that?&#8217;.
Tip #2 : No motivation to learn that new tech? Go on lots of interviews for jobs you can&#8217;t do. Can&#8217;t forget those wrong answers!
Tip #3 : Don&#8217;t do phone interviews while going to the bathroom. No matter how nervous you are. That goes for Skype too.

More to come - feel free to comment on your own!
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[three.js object and camera position tracking in real time]]></title>
    <link href="http://html5devgal.com//blog/2013/04/25/three-js-object-and-camera-position-tracking-in-real-time/"/>
    <updated>2013-04-25T00:00:00-05:00</updated>
    <id>http://html5devgal.com//blog/2013/04/25/three-js-object-and-camera-position-tracking-in-real-time</id>
    <content type="html"><![CDATA[<h3>In the &#8220;2D&#8221; world, you can inspect an element in a browser using the browser&#8217;s development tool (Firebug in Firefox, Chrome IE and Safari have their own) and view / tweak the css in realtime to move the element around.</h3>
<h3>In the CSS3D world this is *not* so easy.</h3>
The <a title="three.js library" href="http://threejs.org/" target="_blank">three.js library</a> is great in that it allows you to create objects, cameras, lights, etc. and position / animate them (animating three.js objects can be achieved with <a title="tween.js" href="https://raw.github.com/mrdoob/three.js/master/examples/js/libs/tween.min.js" target="_blank">tween.js</a>) with x, y, and z coordinates.
<h3>3D positioning</h3>
Basically a 3D grid has an <strong>x plane</strong> (which is horizontal), a <strong>y plane</strong> (which is vertical) and a <strong>z plane</strong> (which is depth)

An object with coordinates x=0, y=0 and z=0 is smack in the <strong>middle</strong> of this grid
<ul>
	<li>A negative coordinate on the x plane will move an element left, positive to the right</li>
	<li>A negative coordinate on the y plane will move an element down, positive will move it up</li>
	<li>A negative coordinate on the z plane will move an element back, positive will move it forward</li>
</ul>
[caption id=&#8221;&#8221; align=&#8221;alignnone&#8221; width=&#8221;603&#8221;]<img alt="3dGrid" src="http://www.chromesphere.com/tutorials/other/Co-ordinates/xyz%20planes_full.png" width="603" height="503" /> 3D Grid[/caption]

three.js has a <a title="CSS3D renderer" href="https://raw.github.com/mrdoob/three.js/master/examples/js/renderers/CSS3DRenderer.js" target="_blank">CSS3D renderer</a> which, magically using some very heavy matrix equations, dynamically translates x, y and z coordinates into a css property called -webkit-transform whose values usually look like this monstrosity:

[code language=&#8221;text&#8221; gutter=&#8221;false&#8221;]
-webkit-transform:
   translate3d(0px, 0px, 473.7224230277783px)
   matrix3d(
      0.9999499917030334, 0, -0.009999499656260014, 0,
      0, -1, 0, 0,
      0.009999499656260014, 0, 0.9999499917030334, 0,
      0.000002216018401668407, 0, -4987.5380859375, 1
   )
   translate3d(747.5px, 363.5px, 0px);
[/code]

<em>Yick.</em>

For more somewhat understandable info on matrix3d, <a title="matrix3D" href="http://9elements.com/html5demos/matrix3d/" target="_blank">this</a> is probably the best documentation out there.

So how are you supposed to figure out the position of a camera in real time after you&#8217;ve zoomed into your app?

Say you want an event to fire off when the camera is close to a certain object? Or an event to fire off only if you click on objects located in a certain z-plane coordinate?
<h3>Tracking Objects</h3>
Say you&#8217;ve got an object element with the following css:

[code language=&#8221;text&#8221; gutter=&#8221;false&#8221; highlight=&#8221;7&#8221;]
-webkit-transform:
 translate3d(-50%, -50%, 0px)
 matrix3d(
 1, 0, 0, 0,
 0, -1, 0, 0,
 0, 0, 1, 0,
 -800, 800, 3500, 1
 );
[/code]

<strong><em>All you really care about as far as tracking the x, y and z coordinates of the object&#8217;s element is the 13th, 14th and 15th values: -800, 800, 3500.</em></strong>

Here&#8217;s an image to illustrate this object element:

[caption id=&#8221;attachment_7&#8221; align=&#8221;alignnone&#8221; width=&#8221;700&#8221;]<a href="http://html5devgal.files.wordpress.com/2013/04/att-html5-u-verse-poc.png"><img class="size-large wp-image-7" alt="videoGrid" src="http://html5devgal.files.wordpress.com/2013/04/att-html5-u-verse-poc.png?w=700" width="700" height="428" /></a> Video Grid[/caption]

So by viewing these coordinates we know where the object is!

This comes in <strong>VERY </strong>handy when tracking the camera position during navigation.

<strong>UPDATE</strong>
I just was honored with a tweet from the great Ricardo Cabello Miguel aka <a title="mr.doob" href="http://www.mrdoob.com/" target="_blank">mr.doob</a>, creator of three.js, about a better way to get the cameras position in relationship to an object:
<div class='embed tweet'><blockquote class="twitter-tweet" align="right" width="350"><p><a href="https://twitter.com/jewelsjacobs">@jewelsjacobs</a> I think you are making things harder than they are&#8230; why not just camera.position.distanceTo( object.position )?</p>&mdash; Mr.doob (@mrdoob) <a href="https://twitter.com/mrdoob/statuses/327555248531050497">April 25, 2013</a></blockquote>
<script async src="http://html5devgal.com///platform.twitter.com/widgets.js" charset="utf-8"></script></div>
Unfortunately, I can&#8217;t really use this for realtime results during navigation because my camera and object position code is in global variables in a different files order to make things more modular. Setting breakpoints in the browser or entering it in the console isn&#8217;t quote working for me. To just get the camera z-plane value in the browser console check out <a title="Trick to get three.js camera z plane value in browser development tools console" href="http://html5devgal.wordpress.com/2013/05/01/trick-to-get-three-js-camera-z-plane-value-in-browser-development-tools-console/" target="_blank">this</a> tip:
<h3>Tracking The Camera</h3>
The camera position can be found in the second child of whatever element is defined as the &#8216;container&#8217; of the scene.

In this example this element has an id of &#8216;video_container&#8217;.

Here&#8217;s the JavaScript code to illustrate adding a scene to an element container:

[code language=&#8221;javascript&#8221; highlight=&#8221;14&#8221;]
var camera, scene, renderer, controls;

camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 5000);
// camera is center &amp; &#8216;front&#8217; or screen - camera coordinates are opposite to object coordinates
camera.position.z = 5000; // lower the number &#8216;closer&#8217; to objects
camera.position.x = -25; // lower the number more to the right
camera.position.y = 0; // lower the number the more up
scene = new THREE.Scene();
// CSS3D renderer
renderer = new THREE.CSS3DRenderer();
renderer.setSize(window.innerWidth, window.innerHeight);
renderer.domElement.style.position = &#8216;absolute&#8217;;

document.getElementById(&#8216;video_container&#8217;).appendChild(renderer.domElement);
[/code]

Here&#8217;s the element in the markup, shown in Chrome&#8217;s Developer Tools:

[caption id=&#8221;attachment_8&#8221; align=&#8221;alignnone&#8221; width=&#8221;700&#8221;]<a href="http://html5devgal.files.wordpress.com/2013/04/cameraobject.png"><img class="size-large wp-image-8" alt="cameraobject" src="http://html5devgal.files.wordpress.com/2013/04/cameraobject.png?w=700" width="700" height="554" /></a> Camera Object Element[/caption]

Here&#8217;s the CSS matrix3D values:

[code language=&#8221;text&#8221; gutter=&#8221;false&#8221; highlight=&#8221;8&#8221;]
-webkit-transform:
   translate3d(0px, 0px, 445.70307751169236px)
   matrix3d(
      0.9999875426292419, 0, -0.004999937489628792,
      0, 0, -1,
      0, 0, 0.004999937489628792,
      0, 0.9999875426292419, 0,
      0, 0, -5000.0625, 1
   )
   translate3d(747.5px, 342px, 0px);
[/code]

As you can see the camera coordinates in the JavaScript code shows z = 5000, but in the css z = -5000.0625, a <strong>NEGATIVE</strong> value.

What gives?

Because the camera is &#8216;facing&#8217; <em><strong>toward</strong></em> the grid and the objects in the grid, the negative and positive values of the x, y, and z coordinates are OPPOSITE of the actual grid and objects. So the way it works in the three.js library is:
<ul>
	<li>+x moves the camera to the LEFT of the grid whereas -z moves the camera to the RIGHT</li>
	<li>+y moves the camera DOWN in the grid whereas -z moves the camera UP</li>
	<li>+z moves the camera AWAY from the grid whereas -z moves the camera CLOSER</li>
</ul>
<strong>AN IMPORTANT NOTE ABOUT TRACKBALL / TOUCH CONTROLS AND THE CAMERA Z POSITION:</strong>
To facilitate scroll wheel, trackball and touch zoom controls, a three.js utility library called <a title="TrackballControls.js" href="https://raw.github.com/mrdoob/three.js/master/examples/js/controls/TrackballControls.js" target="_blank">Trackball Controls</a> can be used.
Make sure all of your objects have <strong>POSITIVE</strong> z coordinate values. If they don&#8217;t the camera will never reach them as it can only zoom up to z coordinate = 0. Once the camera has z = 0 you will keep pinching / scrolling forever and go no where.
]]></content>
  </entry>
  
</feed>
